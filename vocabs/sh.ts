/**
 * @file shacl vocabulary
 */

import { NamedNode } from "../model.ts";

function sh(name: string): NamedNode {
  return {
    tag: "named",
    iri: "http://www.w3.org/ns/shacl#" + name,
  };
}

export default {
  "alternativePath": sh("alternativePath"),
  "annotationProperty": sh("annotationProperty"),
  "annotationValue": sh("annotationValue"),
  "annotationVarName": sh("annotationVarName"),
  "ask": sh("ask"),
  "closed": sh("closed"),
  "condition": sh("condition"),
  "conforms": sh("conforms"),
  "construct": sh("construct"),
  "datatype": sh("datatype"),
  "deactivated": sh("deactivated"),
  "declare": sh("declare"),
  "defaultValue": sh("defaultValue"),
  "description": sh("description"),
  "detail": sh("detail"),
  "disjoint": sh("disjoint"),
  "entailment": sh("entailment"),
  "equals": sh("equals"),
  "expression": sh("expression"),
  "filterShape": sh("filterShape"),
  "flags": sh("flags"),
  "focusNode": sh("focusNode"),
  "group": sh("group"),
  "hasValue": sh("hasValue"),
  "ignoredProperties": sh("ignoredProperties"),
  "intersection": sh("intersection"),
  "inversePath": sh("inversePath"),
  "js": sh("js"),
  "jsFunctionName": sh("jsFunctionName"),
  "jsLibrary": sh("jsLibrary"),
  "jsLibraryURL": sh("jsLibraryURL"),
  "labelTemplate": sh("labelTemplate"),
  "languageIn": sh("languageIn"),
  "lessThan": sh("lessThan"),
  "lessThanOrEquals": sh("lessThanOrEquals"),
  "maxCount": sh("maxCount"),
  "maxExclusive": sh("maxExclusive"),
  "maxInclusive": sh("maxInclusive"),
  "maxLength": sh("maxLength"),
  "message": sh("message"),
  "minCount": sh("minCount"),
  "minExclusive": sh("minExclusive"),
  "minInclusive": sh("minInclusive"),
  "minLength": sh("minLength"),
  "name": sh("name"),
  "namespace": sh("namespace"),
  "node": sh("node"),
  "nodeKind": sh("nodeKind"),
  "nodeValidator": sh("nodeValidator"),
  "nodes": sh("nodes"),
  "object": sh("object"),
  "oneOrMorePath": sh("oneOrMorePath"),
  "optional": sh("optional"),
  "order": sh("order"),
  "parameter": sh("parameter"),
  "path": sh("path"),
  "pattern": sh("pattern"),
  "predicate": sh("predicate"),
  "prefix": sh("prefix"),
  "prefixes": sh("prefixes"),
  "property": sh("property"),
  "propertyValidator": sh("propertyValidator"),
  "qualifiedMaxCount": sh("qualifiedMaxCount"),
  "qualifiedMinCount": sh("qualifiedMinCount"),
  "qualifiedValueShape": sh("qualifiedValueShape"),
  "qualifiedValueShapesDisjoint": sh("qualifiedValueShapesDisjoint"),
  "result": sh("result"),
  "resultAnnotation": sh("resultAnnotation"),
  "resultMessage": sh("resultMessage"),
  "resultPath": sh("resultPath"),
  "resultSeverity": sh("resultSeverity"),
  "returnType": sh("returnType"),
  "rule": sh("rule"),
  "select": sh("select"),
  "severity": sh("severity"),
  "shapesGraph": sh("shapesGraph"),
  "shapesGraphWellFormed": sh("shapesGraphWellFormed"),
  "sourceConstraint": sh("sourceConstraint"),
  "sourceConstraintComponent": sh("sourceConstraintComponent"),
  "sourceShape": sh("sourceShape"),
  "sparql": sh("sparql"),
  "subject": sh("subject"),
  "suggestedShapesGraph": sh("suggestedShapesGraph"),
  "target": sh("target"),
  "targetClass": sh("targetClass"),
  "targetNode": sh("targetNode"),
  "targetObjectsOf": sh("targetObjectsOf"),
  "targetSubjectsOf": sh("targetSubjectsOf"),
  "union": sh("union"),
  "uniqueLang": sh("uniqueLang"),
  "update": sh("update"),
  "validator": sh("validator"),
  "value": sh("value"),
  "xone": sh("xone"),
  "zeroOrMorePath": sh("zeroOrMorePath"),
  "zeroOrOnePath": sh("zeroOrOnePath"),
  "AbstractResult": sh("AbstractResult"),
  "ConstraintComponent": sh("ConstraintComponent"),
  "Function": sh("Function"),
  "JSConstraint": sh("JSConstraint"),
  "JSExecutable": sh("JSExecutable"),
  "JSFunction": sh("JSFunction"),
  "JSLibrary": sh("JSLibrary"),
  "JSRule": sh("JSRule"),
  "JSTarget": sh("JSTarget"),
  "JSTargetType": sh("JSTargetType"),
  "JSValidator": sh("JSValidator"),
  "NodeKind": sh("NodeKind"),
  "NodeShape": sh("NodeShape"),
  "Parameter": sh("Parameter"),
  "Parameterizable": sh("Parameterizable"),
  "PrefixDeclaration": sh("PrefixDeclaration"),
  "PropertyGroup": sh("PropertyGroup"),
  "PropertyShape": sh("PropertyShape"),
  "ResultAnnotation": sh("ResultAnnotation"),
  "Rule": sh("Rule"),
  "SPARQLAskExecutable": sh("SPARQLAskExecutable"),
  "SPARQLAskValidator": sh("SPARQLAskValidator"),
  "SPARQLConstraint": sh("SPARQLConstraint"),
  "SPARQLConstructExecutable": sh("SPARQLConstructExecutable"),
  "SPARQLExecutable": sh("SPARQLExecutable"),
  "SPARQLFunction": sh("SPARQLFunction"),
  "SPARQLRule": sh("SPARQLRule"),
  "SPARQLSelectExecutable": sh("SPARQLSelectExecutable"),
  "SPARQLSelectValidator": sh("SPARQLSelectValidator"),
  "SPARQLTarget": sh("SPARQLTarget"),
  "SPARQLTargetType": sh("SPARQLTargetType"),
  "SPARQLUpdateExecutable": sh("SPARQLUpdateExecutable"),
  "Severity": sh("Severity"),
  "Shape": sh("Shape"),
  "Target": sh("Target"),
  "TargetType": sh("TargetType"),
  "TripleRule": sh("TripleRule"),
  "ValidationReport": sh("ValidationReport"),
  "ValidationResult": sh("ValidationResult"),
  "Validator": sh("Validator"),
  "this": sh("this"),
  "AndConstraintComponent": sh("AndConstraintComponent"),
  "ClassConstraintComponent": sh("ClassConstraintComponent"),
  "ClosedConstraintComponent": sh("ClosedConstraintComponent"),
  "DatatypeConstraintComponent": sh("DatatypeConstraintComponent"),
  "DisjointConstraintComponent": sh("DisjointConstraintComponent"),
  "EqualsConstraintComponent": sh("EqualsConstraintComponent"),
  "ExpressionConstraintComponent": sh("ExpressionConstraintComponent"),
  "HasValueConstraintComponent": sh("HasValueConstraintComponent"),
  "InConstraintComponent": sh("InConstraintComponent"),
  "JSConstraintComponent": sh("JSConstraintComponent"),
  "LanguageInConstraintComponent": sh("LanguageInConstraintComponent"),
  "LessThanConstraintComponent": sh("LessThanConstraintComponent"),
  "LessThanOrEqualsConstraintComponent": sh(
    "LessThanOrEqualsConstraintComponent",
  ),
  "MaxCountConstraintComponent": sh("MaxCountConstraintComponent"),
  "MaxExclusiveConstraintComponent": sh("MaxExclusiveConstraintComponent"),
  "MaxInclusiveConstraintComponent": sh("MaxInclusiveConstraintComponent"),
  "MaxLengthConstraintComponent": sh("MaxLengthConstraintComponent"),
  "MinCountConstraintComponent": sh("MinCountConstraintComponent"),
  "MinExclusiveConstraintComponent": sh("MinExclusiveConstraintComponent"),
  "MinInclusiveConstraintComponent": sh("MinInclusiveConstraintComponent"),
  "MinLengthConstraintComponent": sh("MinLengthConstraintComponent"),
  "NodeConstraintComponent": sh("NodeConstraintComponent"),
  "NodeKindConstraintComponent": sh("NodeKindConstraintComponent"),
  "NotConstraintComponent": sh("NotConstraintComponent"),
  "OrConstraintComponent": sh("OrConstraintComponent"),
  "PatternConstraintComponent": sh("PatternConstraintComponent"),
  "PropertyConstraintComponent": sh("PropertyConstraintComponent"),
  "QualifiedMaxCountConstraintComponent": sh(
    "QualifiedMaxCountConstraintComponent",
  ),
  "QualifiedMinCountConstraintComponent": sh(
    "QualifiedMinCountConstraintComponent",
  ),
  "SPARQLConstraintComponent": sh("SPARQLConstraintComponent"),
  "UniqueLangConstraintComponent": sh("UniqueLangConstraintComponent"),
  "XoneConstraintComponent": sh("XoneConstraintComponent"),
  "BlankNode": sh("BlankNode"),
  "BlankNodeOrIRI": sh("BlankNodeOrIRI"),
  "BlankNodeOrLiteral": sh("BlankNodeOrLiteral"),
  "IRI": sh("IRI"),
  "IRIOrLiteral": sh("IRIOrLiteral"),
  "Literal": sh("Literal"),
  "Info": sh("Info"),
  "Violation": sh("Violation"),
  "Warning": sh("Warning"),
};
